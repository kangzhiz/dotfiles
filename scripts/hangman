#!/usr/bin/env python3

"""
A simple game of hangman.

"""

# TODO: Remove unnecessary NLTK stuff and only play a single round.
# TODO: Retrieve words using some online API.
# TODO: Figure out how many lives to allow.


def play_guessing_game(wb, points=5):
    """
    Start a word guessing game using words from a provided word bank.

    Args:
        wb (list): list of words that can be used
        points (int): number of points the user starts with

    Return:
        int: final points at the end of the game

    """

    # get random word from list
    rand_i = randint(0, len(wb) - 1)
    word = wb[rand_i]

    # chosen word is stored as a list of tuples in the form:
    # (letter (str), guessed (bool))
    status = [(letter, False) for letter in word]
    display_word(status)

    # create set used to track which letters haved been guessed
    guessed = set()

    while True:
        guess = input('Guess a letter: ')

        if guess == '!':
            print('Your final score is {}. Exiting game...'.format(points))
            return points
        elif len(guess) > 1 or guess.isalpha() == False:
            print('Invalid input. Try again.')
        elif guess in guessed:
            print('Already guessed. Try again.')
        else:
            guessed.add(guess)

            # check if guess is correct
            if guess in word:
                status = [(lt[0], lt[0] in guessed) for lt in status]
                points += 1
                print('Right! Your score is {}'.format(points))
            else:
                points -= 1
                print('Sorry, guess again. Your score is {}'.format(points))

                # exit if score is negative
                if points < 0:
                    print('You have run out of points.')
                    print('The word was {}'.format(word))
                    return points

        if display_word(status) == 0:
            print('You solved it! Your score is {}'.format(points))
            print('\nGuess another word')
            return play_guessing_game(wb, points)


def display_word(word):
    """
    Display the word in the correct format for the guessing game.

    Args:
        word (list): list of tuples, where each tuple indicates a letter
            in the word and whether or not that letter has been guessed

    Return:
        int: number of unguessed letters left

    """

    string = ''

    for letter in word:
        if letter[1]:
            string += letter[0]
        else:
            string += '_'
        string += ' '

    print(string)
    return string.count('_')


if __name__ == '__main__':
    if len(sys.argv) > 1:
        print('Input file: ', sys.argv[1])

        tokens, nouns = preprocess(sys.argv[1])
        word_bank = get_most_common_words(tokens, nouns)

        print("Let's play a word guessing game!")
        play_guessing_game(word_bank)
    else:
        print('Error: text file not provided')

    # print on termination
    print('Program terminated.')
